import pandas as pd
import numpy as np

pd.set_option('display.max_rows', 5000)

obs = r'ENTER_FILE_PATH_HERE' # read in observational csv file

obs_df = pd.read_csv(obs, header= None, names= ['WBAN','Date', 'Extinc Coeff', 'D/N', 'Dir 2min av wind', 
                                                'Spd 2min av wind(kts)', 'Dir max 5min av wind',
                                                'Spd_max_5min_av_wind(kts)'], index_col=False, 
                     na_filter=False)
## 'names' can change based on errors that arise from lack of columns -- adding blank names columns (Ex: ''), running that code separately 
## then adjusting names as necessary can solve this 

keep_cols = ['WBAN', 'Date', 'Spd_max_5min_av_wind(kts)']
obs_df = obs_df[keep_cols]

obs_df['Date'] = obs_df['Date'].map(lambda x: x.lstrip('ABCDEFGHIJKLMNOPQRSTUVWXYZ'))

obs_df['WBAN'] = obs_df['WBAN'].map(lambda x: x.lstrip('1234567890'))

import pytz

a = str(obs_df.loc[0, 'Date'])
offset = (int(a[12:14]) - int(a[8:10])) * 60
# print(offset)

obs_df['Date'] = pd.to_datetime(obs_df['Date'].astype(str).str[:12], format = '%Y%m%d%H%M')
obs_df['Date'] = obs_df['Date'].dt.tz_localize('UTC').dt.tz_convert(pytz.FixedOffset(offset))

## convert 'Date' column to datetime format

# obs_df.info()
# obs_df.head()

### BOOLEAN FILTER BY YEAR,MONTH,DAY,HOUR GOES HERE

# obs_df_time.info()
# obs_df_time.head()

obs_df_time.to_csv('ENTER_OUTPUT_FILE_PATH_HERE')
